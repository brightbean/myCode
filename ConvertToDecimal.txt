// C#
// converts any base-2 to base-16 number to base-10 (decimal)
        //
        private string ConvertToDecimal(string nonDecimal, int oldBase)
        {
            Int64 convertedNum = 0;            
            int positionDecimal = 0;
            char positionChar = ' ';

            for (int i = 0, j = nonDecimal.Length - 1; i < nonDecimal.Length; i++, j--)
            {
                positionChar = nonDecimal[j];

                if (((int)positionChar - '0') >= 0 && ((int)positionChar - '0' <= 9))
                {
                    positionDecimal = (int)(positionChar - '0');
                }
                else if (positionChar == 'A')
                {
                    positionDecimal = 10;
                }
                else if (positionChar == 'B')
                {
                    positionDecimal = 11;
                }
                else if (positionChar == 'C')
                {
                    positionDecimal = 12;
                }
                else if (positionChar == 'D')
                {
                    positionDecimal = 13;
                }
                else if (positionChar == 'E')
                {
                    positionDecimal = 14;
                }
                else if (positionChar == 'F')
                {
                    positionDecimal = 15;
                }
                                
                convertedNum += Convert.ToInt64(positionDecimal * (Int64)Math.Pow(oldBase, i));
            }

            return convertedNum.ToString();
            
        }